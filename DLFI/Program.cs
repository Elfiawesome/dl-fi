using System.IO.Pipelines;
using System.Text.Json;
using DLFI.Extractor.Nhentai;
using DLFI.Records.Reader;
using DLFI.Webapp;
using Microsoft.Data.Sqlite;

var options = new JsonSerializerOptions
{
	PropertyNamingPolicy = JsonNamingPolicy.SnakeCaseLower,
	TypeInfoResolver = new PolymorphicTypeResolver()
};
const string path = @"C:\Users\elfia\OneDrive\Desktop\DL-FI Project\Serpent";
var main = GroupReader.Open(path, options);

// List<int> toDownload = [552357, 412525, 596851, 596203, 571427, 596096, 596095, 596091, 595535, 595528, 595493, 595306];//, 595166, 595076, 595074, 595071, 594417, 593745, 593161, 592925, 592913, 592800, 592105, 591928, 591737, 591698, 591329, 591141, 590866, 590528, 589972, 589971, 588571, 588567, 588469, 588318, 588016, 587653, 587648, 586841, 586747, 586720, 586713, 581108, 586368, 586304, 586137, 586000, 585992, 585987, 585976, 585714, 585692, 585660, 585629, 585628, 585627, 585536, 585523, 585514, 585477, 585407, 585103, 585070, 584990, 584967, 584585, 584469, 584398, 584306, 584281, 584276, 584261, 584249, 584182, 584171, 584059, 584006, 584005, 584002, 583829, 583705, 583675, 583159, 583002, 582801, 582537, 582493, 582448, 582251, 582243, 582236, 581809, 581753, 581723, 581315, 581176, 581169, 580857, 580429, 580309, 579984, 579777, 579718, 579685, 575424, 579312, 579090, 579039, 578585, 578474, 578367, 577689, 577577, 577228, 577087, 576989, 576899, 576879, 576402, 576319, 576337, 575917, 575840, 575569, 575176, 575195, 574761, 574564, 574221, 574127, 574103, 574008, 573958, 573795, 573677, 573666, 573206, 573174, 573119, 572991, 572871, 572842, 572825, 572720, 572554, 572095, 571859, 571732, 571731, 571676, 571604, 571602, 571564, 571549, 571485, 571427, 571387, 571112, 571111, 570746, 570666, 570610, 570609, 570608, 570607, 570546, 570531, 570328, 570217, 570146, 569476, 569227, 569183, 568888, 568859, 568630, 568320, 568313, 568126, 568075, 567607, 567383, 567289, 567278, 567274, 566973, 566938, 566925, 566924, 566719, 566533, 566507, 566431, 566408, 566402, 566391, 566313, 566218, 566216, 566152, 566146, 556365, 565483, 565284, 565187, 565135, 564985, 565039, 564919, 564819, 564549, 564550, 564413, 564104, 564102, 564063, 563862, 563720, 563719, 563630, 563538, 562856, 562830, 562314, 562316, 562306, 562266, 562171, 562159, 560942, 560579, 560497, 560362, 560267, 560127, 560043, 559917, 559800, 559632, 559337, 559090, 558648, 558423, 558422, 557830, 557512, 557166, 557091, 556978, 556798, 556693, 556365, 556123, 555791, 554301, 554300, 554298, 554299, 554297, 554040, 554032, 554031, 553799, 552575, 552517, 552357, 552215, 552203, 551976, 551922, 551696, 551690, 551573, 551010, 550972, 549391, 549247, 549174, 548998, 548850, 548329, 548325, 548301, 548251, 548157, 548072, 547831, 547822, 547732, 547652, 547466, 547465, 546983, 546980, 546947, 546944, 546853, 546656, 546518, 546364, 546209, 545624, 545615, 544686, 544437, 544105, 544103, 544079, 544031, 543958, 543957, 543854, 543850, 543740, 543722, 543540, 543359, 543341, 543170, 543147, 542831, 542893, 542833, 542727, 542533, 542214, 542213, 542144, 542085, 542064, 542047, 541466, 541425, 541417, 541410, 541253, 541174, 541053, 540933, 540784, 540536, 540481, 540455, 539823, 539811, 539268, 538746, 538744, 538700, 538446, 538439, 538389, 537560, 537516, 536798, 536456, 536450, 536275, 536267, 536249, 536103, 535918, 535659, 535537, 535240, 535135, 535127, 535077, 535027, 535020, 535021, 535022, 534906, 534521, 534316, 533919, 533749, 533749, 533702, 533647, 533578, 533473, 533426, 533335, 533206, 532940, 532831, 532777, 532710, 532623, 532620, 532203, 532202, 532187, 531958, 531936, 531910, 531784, 531771, 531750];
// List<Task> tasks = [];
// foreach (var nhId in toDownload)
// {
// 	var rr = main?.GetGroupRecursive(["Nhentai", "Galleries", $"{nhId}"]);
// 	if (rr == null) { return; }
// 	NhentaiWorkExtracter extracter = new(rr, nhId);
// 	tasks.Add(extracter.ExtractAsync());
// }
// foreach (var t in tasks) { await t; }


// List<Task> tasks = [];
// foreach (var nhId in new int[] {
// 	598028, 597835, 597688
// })
// {
// 	var rr = main?.GetGroupRecursive(["Nhentai", "Galleries", $"{nhId}"]);
// 	if (rr == null) { return; }
// 	NhentaiWorkExtracter extracter = new(rr, nhId);
// 	tasks.Add(extracter.ExtractAsync());
// }
// foreach (var t in tasks) { await t; }

// await new ServerApp().Run();
main.Sql();